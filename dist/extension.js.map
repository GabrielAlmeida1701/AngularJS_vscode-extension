{"version":3,"sources":["../webpack/bootstrap",".././src/extension.js","../external \"vscode\"","../external \"fs\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","vscode","fs","activate","context","services","docHovers","loadServices","window","showInformationMessage","workspace","workspaceFolders","forEach","folder","path","uri","toString","readFolder","readdir","err","files","console","log","file","fPath","isFolder","lstatSync","isDirectory","fileType","substring","indexOf","readFile","data","error","processFile","replace","onDidSaveTextDocument","document","fileName","getText","onDidChangeWorkspaceFolders","event","languages","registerHoverProvider","[object Object]","position","token","range","getWordRangeAtPosition","word","lineAt","start","line","text","substr","character","end","result","docObj","contents","servicesProvider","registerCompletionItemProvider","snippets","keys","servSnip","CompletionItem","insertText","SnippetString","kind","CompletionItemKind","Class","push","methodsProvider","beforeDot","slice","getTextBeforeCursor","match","serv","prop","mark","MarkdownString","doc","isTrusted","funcSnip","sortText","documentation","isFunc","Function","Property","snip","snippetProvider","snippet","Keyword","serviceNameStr","serviceName","functions","funcsAux","funcName","id","docAux","aux","endDoc","lastIndexOf","validate","strDoc","axDoc","split","fDoc","trim","params","docSnip","getDocumentation","vars","varName","subscriptions","deactivate","require"],"mappings":"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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nconst vscode = require('vscode');\nconst fs = require('fs');\n\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\n\n/**\n * @param {vscode.ExtensionContext} context\n */\nfunction activate(context) {\n\n\tvar services = {};\n\tvar docHovers = {};\n\n\t// Use the console to output diagnostic information (console.log) and errors (console.error)\n\t// This line of code will only be executed once when your extension is activated\n\tconsole.log('Congratulations, your extension \"AngularJS extension\" is now active!');\n\tvscode.window.showInformationMessage('AngularJS extension is now active');\n\tloadServices();\n\n\tfunction loadServices() {\n\t\tservices = {};\n\t\tdocHovers = {};\n\n\t\tvscode.window.showInformationMessage('Start Analyzing');\n\n\t\tlet folders = vscode.workspace.workspaceFolders;\n\t\tfolders.forEach(folder => {\n\t\t\tlet path = folder.uri.toString(true);\n\t\t\tpath = path.replace('file:///', '');\n\n\t\t\treadFolder(path);\n\t\t});\n\n\t\tvscode.window.showInformationMessage('All files analysed');\n\t}\n\n\tvscode.workspace.onDidSaveTextDocument(document => {\n\t\tlet fileType = document.fileName.substring(document.fileName.indexOf('.') + 1);\n\t\tif (fileType == 'service.js') processFile(document.getText());\n\t});\n\n\tvscode.workspace.onDidChangeWorkspaceFolders(event => loadServices());\n\n\tvscode.languages.registerHoverProvider('javascript', {\n\t\tprovideHover(document, position, token) {\n\t\t\tlet txt = document.getText();\n\t\t\tlet range = document.getWordRangeAtPosition(position);\n\t\t\tlet line = document.lineAt(range.start.line)\n\t\t\tlet word = line.text.substr(range.start.character, range.end.character - range.start.character);\n\n\t\t\tlet result = '';\n\t\t\tlet docObj = docHovers[word];\n\t\t\tif (docObj != '' && docObj !== null) result = docObj;\n\n\t\t\treturn {\n\t\t\t\tcontents: [result]\n\t\t\t};\n\t\t}\n\t});\n\n\tlet servicesProvider = vscode.languages.registerCompletionItemProvider('javascript', {\n\t\tprovideCompletionItems(document, position, token, context) {\n\t\t\tlet snippets = [];\n\n\t\t\tObject.keys(services).forEach(key => {\n\t\t\t\tlet servSnip = new vscode.CompletionItem(key);\n\t\t\t\tservSnip.insertText = new vscode.SnippetString(key);\n\t\t\t\t//servSnip.documentation = new vscode.MarkdownString(key + ' documentation.... bla bla bla<br>bla');\n\t\t\t\tservSnip.kind = vscode.CompletionItemKind.Class;\n\n\t\t\t\tsnippets.push(servSnip);\n\t\t\t});\n\n\t\t\treturn snippets;\n\t\t}\n\t});\n\n\tlet methodsProvider = vscode.languages.registerCompletionItemProvider('javascript', {\n\t\tprovideCompletionItems(document, position, token, context) {\n\t\t\tlet snippets = [];\n\t\t\tlet cText = getTextBeforeCursor(document, position);\n\n\t\t\tlet beforeDot = (cText.match(/.*(?=\\.)/) || [''])[0].replace(/\\s*/, '');\n\t\t\tif (beforeDot == '') return [];\n\n\t\t\tObject.keys(services).forEach(key => {\n\t\t\t\tlet canAdd = beforeDot == '' || (beforeDot != '' && beforeDot.indexOf(key) != -1);\n\n\t\t\t\tif (canAdd) {\n\t\t\t\t\tlet serv = services[key];\n\n\t\t\t\t\tObject.keys(serv).forEach(prop => {\n\n\t\t\t\t\t\tlet mark = new vscode.MarkdownString(services[key][prop].doc);\n\t\t\t\t\t\tmark.isTrusted = true;\n\n\n\t\t\t\t\t\tlet funcSnip = new vscode.CompletionItem(prop);\n\t\t\t\t\t\tfuncSnip.sortText = key + '.';\n\t\t\t\t\t\tfuncSnip.documentation = mark;\n\n\t\t\t\t\t\tif (services[key][prop].isFunc) funcSnip.kind = vscode.CompletionItemKind.Function;\n\t\t\t\t\t\telse funcSnip.kind = vscode.CompletionItemKind.Property;\n\n\t\t\t\t\t\tif (services[key][prop].snip !== null && services[key][prop].snip !== '')\n\t\t\t\t\t\t\tfuncSnip.insertText = new vscode.SnippetString(services[key][prop].snip);\n\t\t\t\t\t\telse funcSnip.insertText = new vscode.SnippetString(prop);\n\n\t\t\t\t\t\tsnippets.push(funcSnip);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn snippets;\n\t\t}\n\t}, '.');\n\n\tlet snippetProvider = vscode.languages.registerCompletionItemProvider('javascript', {\n\t\tprovideCompletionItems(document, position, token, context) {\n\t\t\tlet snippet = new vscode.CompletionItem('snippet');\n\t\t\tsnippet.insertText = new vscode.SnippetString('snippet');\n\t\t\tsnippet.documentation = new vscode.MarkdownString('Define a snippet in your documentation');\n\t\t\tsnippet.kind = vscode.CompletionItemKind.Keyword;\n\t\t\tsnippet.sortText = '000';\n\n\t\t\treturn [\n\t\t\t\tsnippet\n\t\t\t];\n\t\t}\n\t}, '@');\n\n\tfunction readFolder(path) {\n\t\tfs.readdir(path, function (err, files) {\n\t\t\tif (err) {\n\t\t\t\tconsole.log('error!');\n\t\t\t}\n\n\t\t\tfiles.forEach((file) => {\n\t\t\t\tlet fPath = path + \"/\" + file;\n\t\t\t\tlet isFolder = fs.lstatSync(fPath).isDirectory();\n\n\t\t\t\tif (isFolder) readFolder(fPath)\n\t\t\t\telse {\n\t\t\t\t\tlet fileType = file.substring(file.indexOf('.') + 1);\n\t\t\t\t\tif (fileType == 'service.js') {\n\t\t\t\t\t\tfs.readFile(fPath, 'utf8', (err, data) => {\n\t\t\t\t\t\t\tif (err) console.error('could´t read file ' + file);\n\t\t\t\t\t\t\telse if (processFile(data)) console.log(file + ' Analysed!');\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction processFile(data) {\n\t\tlet serviceNameStr = data.match(/service\\('(.*?)(?=')/g);\n\n\t\tif (serviceNameStr !== null) {\n\t\t\tlet serviceName = serviceNameStr[0].replace(/service\\('/g, '');\n\t\t\tlet functions = data.match(/this\\.(.*)=(\\s*)((?=f)|(?=a))/g);\n\t\t\tlet funcsAux = [];\n\n\t\t\tservices[serviceName] = {};\n\n\t\t\tif (functions !== null) {\n\t\t\t\tfunctions.forEach(funcName => {\n\t\t\t\t\tlet name = funcName.replace(/\\s/g, '').replace('this.', '').replace('=', '');\n\t\t\t\t\tlet documentation = serviceName + '.' + name;\n\t\t\t\t\tlet snippet = null;\n\t\t\t\t\tfuncsAux.push(name);\n\n\t\t\t\t\tlet id = data.indexOf(funcName);\n\t\t\t\t\tif (id != -1) {\n\t\t\t\t\t\tlet docAux = getDocumentation(data, id, serviceName);\n\n\t\t\t\t\t\tdocumentation = docAux.documentation;\n\t\t\t\t\t\tsnippet = docAux.snippet;\n\n\t\t\t\t\t\tdocHovers[name] = documentation;\n\t\t\t\t\t}\n\n\t\t\t\t\tservices[serviceName][name] = {\n\t\t\t\t\t\tisFunc: true,\n\t\t\t\t\t\tdoc: documentation,\n\t\t\t\t\t\tsnip: snippet\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet vars = data.match(/this\\.(\\w*)/g);\n\t\t\tif (vars !== null) {\n\t\t\t\tlet aux = [];\n\n\t\t\t\tvars.forEach(varName => {\n\t\t\t\t\tlet name = varName.replace(/\\s/g, '').replace('this.', '');\n\n\t\t\t\t\tif (aux.indexOf(name) == -1 && funcsAux.indexOf(name) == -1) {\n\t\t\t\t\t\taux.push(name);\n\t\t\t\t\t\tservices[serviceName][name] = { isFunc: false };\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction getDocumentation(data, id, serviceName) {\n\t\tlet aux = data.substring(0, id);\n\t\tlet endDoc = aux.lastIndexOf('*/');\n\n\t\tif (endDoc != -1) {\n\t\t\tlet validate = aux.substring(endDoc, id);\n\t\t\tif (validate.indexOf(';') == -1 && validate.indexOf('}') == -1) {\n\t\t\t\tlet strDoc = aux.lastIndexOf('/**');\n\t\t\t\tlet doc = aux.substring(strDoc, endDoc);\n\t\t\t\tlet axDoc = doc.split('*');\n\t\t\t\tlet fDoc = '';\n\t\t\t\taxDoc.forEach(line => {\n\t\t\t\t\tlet l = line.trim().replace(/\\s{2,}/g, '');\n\t\t\t\t\tif (l != '/' && l != '') {\n\t\t\t\t\t\tif (fDoc != '') fDoc += '     \\n';\n\t\t\t\t\t\tfDoc += l;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tfDoc = fDoc.replace('@param', '     \\n**Parameters:**     \\n@param')\n\t\t\t\t\t.replace('@return', '     \\n**Returns:**     \\n**[return](/)**');\n\n\t\t\t\tlet params = fDoc.match(/@param\\s\\w*/g);\n\t\t\t\tif (params !== null) {\n\t\t\t\t\tparams.forEach(p => {\n\t\t\t\t\t\tfDoc = fDoc.replace(p, '**[' + p.replace('@param', '').trim() + '](/)**');\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tlet docSnip = '';\n\t\t\t\tlet snip = fDoc.match(/@snippet(\\s|.)*(;|^\\*)/g);\n\t\t\t\tif (snip !== null) {\n\t\t\t\t\tdocSnip = snip[0].replace('@snippet', '').replace(serviceName + '.', '').trim();\n\t\t\t\t\tfDoc = fDoc.replace(snip[0], '');\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tdocumentation: fDoc,\n\t\t\t\t\tsnippet: docSnip\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tdocumentation: '',\n\t\t\tsnippet: ''\n\t\t};\n\t}\n\n\tfunction getTextBeforeCursor(document, position) {\n\t\treturn document.lineAt(position).text.slice(0, position.character);\n\t}\n\n\tcontext.subscriptions.push(servicesProvider);\n\tcontext.subscriptions.push(methodsProvider);\n\tcontext.subscriptions.push(snippetProvider);\n}\nexports.activate = activate;\n\n// this method is called when your extension is deactivated\nfunction deactivate() { }\n\nmodule.exports = {\n\tactivate,\n\tdeactivate\n}\n","module.exports = require(\"vscode\");","module.exports = require(\"fs\");"],"sourceRoot":""}